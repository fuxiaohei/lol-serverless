version: '3'

networks:
  lol_serverless_network:
    external: true

services:
  redis-server:
    image: redis:7.0-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass 2486765c496f5c7fcaeaae4f1d3e7c1c63c4fd45d5cc8004ccaf4dfba83f8c9d
    volumes:
      - ./redis_data:/data
    networks:
      - lol_serverless_network
  reverse-proxy:
    image: traefik:v2.10
    command: --api.insecure=true --providers.redis.endpoints=redis-server:6379 --providers.redis.password=2486765c496f5c7fcaeaae4f1d3e7c1c63c4fd45d5cc8004ccaf4dfba83f8c9d
    ports:
      - "80:80"
      - "8080:8080" # traefik dashboard
    networks:
      - lol_serverless_network
    depends_on:
      - redis-server
  mysql-db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=lol-serverless
      - MYSQL_ROOT_PASSWORD=TJbP7C9ESkLjnS7HXa6y
    ports:
      - '3366:3306'
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./lol-serverless.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lol_serverless_network
  lol-runtime:
    image: ghcr.io/fuxiaohei/lol-runtime:latest
    environment:
      - MONI_HTTP_ADDR=0.0.0.0:38889
      - MONI_STORAGE_LOCAL_PATH=/data
    deploy:
      replicas: 2
    ports:
      - '38880-38881:38889'
    networks:
      - lol_serverless_network
    volumes:
      - ./lol_data:/data
  lol-serverless:
    image: ghcr.io/fuxiaohei/lol-server:latest
    environment:
      - MONI_GRPC_ADDR=0.0.0.0:38779
      - MONI_STORAGE_LOCAL_PATH=/data
      - MONI_DB_HOST=mysql-db
      - MONI_DB_PORT=3306
      - MONI_DB_USER=root
      - MONI_DB_PASSWORD=TJbP7C9ESkLjnS7HXa6y
      - MONI_DB_NAME=lol-serverless
      - LOCAL_REGION_REDIS_ADDR=redis-server:6379
      - LOCAL_REGION_REDIS_PASSWORD=2486765c496f5c7fcaeaae4f1d3e7c1c63c4fd45d5cc8004ccaf4dfba83f8c9d
      - LOCAL_REGION_RUNTIME=http://lol-runtime:38889
    ports:
      - '38779:38779'
    depends_on:
      mysql-db:
        condition: service_started
        restart: true
      redis-server:
        condition: service_started
    networks:
      - lol_serverless_network
    volumes:
      - ./lol_data:/data
