version: "3"

networks:
  land_serverless_network:
    external: true

services:
  redis:
    image: redis:7.0.12-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${REDIS_DIR}:/data
    networks:
      - land_serverless_network
  proxy:
    image: traefik:3.0
    command: --api.insecure=true --providers.redis.endpoints=redis:6379 --providers.redis.password=${REDIS_PASSWORD} --providers.docker=true --providers.docker.exposedByDefault=false
    ports:
      - "80:80"
      # - "8080:8080" # traefik dashboard
    networks:
      - land_serverless_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_DOMAIN}`)"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_BASIC_AUTH}"
  land-runtime:
    image: docker.io/library/land-runtime:v0.1.0-b3
    restart: always
    environment:
      - HTTP_ADDR=${LAND_RUMTIME_HTTP_ADDR}
      - STORAGE_LOCAL_PATH=/data
    deploy:
      replicas: 2
    networks:
      - land_serverless_network
    volumes:
      - ${LAND_RUMTIME_STORAGE_DIR}:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.land-runtime.rule=Host(`${LAND_RUNTIME_DOMAIN}`)