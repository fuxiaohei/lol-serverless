use land_sdk::http::{fetch, Body, Error, Request, RequestOptions, Response};
use land_sdk::{http_main, ExecutionCtx};

#[http_main]
pub fn handle_request(req: Request, mut ctx: ExecutionCtx) -> Result<Response, Error> {
    // read uri and method from request
    let url = req.uri().clone();
    let method = req.method().to_string().to_uppercase();
    let fetch_request = http::Request::builder()
            .method("GET")
            .uri("https://www.rust-lang.org/")
            .body(Body::from(""))
            .unwrap();
    let fetch_response = fetch(fetch_request, RequestOptions::default()).unwrap();
    println!("wait until fetch: {:?}", fetch_response);

    // build response
    Ok(http::Response::builder()
        .status(200)
        .header("X-Request-Url", url.to_string())
        .header("X-Request-Method", method)
        .body(Body::from("Hello Runtime.land!!"))
        .unwrap())
}