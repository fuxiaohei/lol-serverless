name: Release
on:
  push:
    branches:
      - main
    tags:
      - "v*"
env:
  CARGO_TERM_COLOR: always
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build release assets
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
              os: "ubuntu-latest",
              arch: "amd64",
              extension: "",
              extraArgs: "",
              target: "",
              targetDir: "target/release",
            }
          - {
              os: "ubuntu-latest",
              arch: "aarch64",
              extension: "",
              extraArgs: "--target aarch64-unknown-linux-gnu",
              target: "aarch64-unknown-linux-gnu",
              targetDir: "target/aarch64-unknown-linux-gnu/release",
            }
          - {
              os: "macos-latest",
              arch: "amd64",
              extension: "",
              extraArgs: "",
              target: "",
              targetDir: "target/release",
            }
          - {
              os: "macos-latest",
              arch: "aarch64",
              extension: "",
              extraArgs: "--target aarch64-apple-darwin",
              target: "aarch64-apple-darwin",
              targetDir: "target/aarch64-apple-darwin/release/",
            }
          - {
              os: "windows-latest",
              arch: "amd64",
              extension: ".exe",
              extraArgs: "",
              target: "",
              targetDir: "target/release",
            }
    steps:
      - uses: actions/checkout@v3
      - name: set the release version (tag)
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: set the release version (nightly)
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: echo "RELEASE_VERSION=nightly" >> $GITHUB_ENV
      - name: lowercase the runner OS name
        shell: bash
        run: |
          OS=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          echo "RUNNER_OS=$OS" >> $GITHUB_ENV
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          target: ${{ matrix.config.target }}
      - name: setup for cross-compiled linux aarch64 build
        if: matrix.config.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          echo '[target.aarch64-unknown-linux-gnu]' >> ${HOME}/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ${HOME}/.cargo/config.toml
      - name: build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: "-p land-cli --release ${{ matrix.config.extraArgs }}"

      - name: package release assets
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir _dist
          cp LICENSE README.md ${{ matrix.config.targetDir }}/land-cli${{ matrix.config.extension }} _dist/
          cd _dist
          tar czf \
            land-cli-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz \
            LICENSE README.md land-cli${{ matrix.config.extension }}
      - name: package release assets
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir _dist
          cp README.md LICENSE ${{ matrix.config.targetDir }}/land-cli${{ matrix.config.extension }} _dist/
          cd _dist
          7z a -tzip \
            land-cli-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.zip \
            README.md LICENSE land-cli${{ matrix.config.extension }}

      - name: upload binary as GitHub artifact
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: land-cli
          path: _dist/land-cli-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz
      - name: upload binary as GitHub artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: land-cli
          path: _dist/land-cli-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.zip

      - name: upload binary to Github release
        if: startsWith(github.ref, 'refs/tags/v') && runner.os != 'Windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: _dist/land-cli-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz
          tag: ${{ github.ref }}
      - name: upload binary to Github release
        if: startsWith(github.ref, 'refs/tags/v') &&  runner.os == 'Windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: _dist/land-cli-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.zip
          tag: ${{ github.ref }}

  update-nightly:
    name: update nightly release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download release assets
        uses: actions/download-artifact@v3
        with:
          name: land-cli

      - name: Delete nightly tag
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          delete_release: true

      - name: Recreate nightly tag and release
        uses: rajatjindal/release-action@v0.0.1
        with:
          tag: nightly
          allowUpdates: true
          prerelease: true
          artifacts: "land-cli-nightly*"
          commit: ${{ github.sha }}
          body: |
            This is a "nightly" release of land-cli. It is automatically built from the latest commit on the main branch. It includes some new features and bug fixes that have not yet been released. Be careful when using this version of land-cli as it may be unstable.