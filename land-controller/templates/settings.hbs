<!doctype html>
<html lang="en" data-bs-theme="light">

<head>
    {{> partials/head.hbs}}
</head>

<body>
    <main id="main-container" class="d-flex flex-nowrap">
        {{> partials/admin-sidebar.hbs}}
        <div id="main-body" class="w-100">
            {{> partials/nav-top.hbs}}
            <div id="main-panel" class="overflow-y-auto">
                <div id="admin-settings" class="pt-3 px-3 container">
                    <div>
                        <h5>Settings</h5>
                        <p class="text-body-tertiary mb-1">Settings in the admin panel.</p>
                    </div>
                    <div class="card shadow-none mt-3">
                        <div class="card-body">
                            <form action="/admin/settings" method="post">
                                <div class="row g-3 align-items-center">
                                    <div class="col-auto">
                                        <label for="settings-select" class="col-form-label">Item Name</label>
                                    </div>
                                    <div class="col-auto">
                                        <select name="name" id="settings-select" class="form-select">
                                            <option value="" selected>Select an item</option>
                                            {{#each settings}}
                                            <option value="{{this}}">{{this}}</option>
                                            {{/each}}
                                        </select>
                                    </div>
                                    <div class="col-auto">
                                        <span class="form-text">
                                            Select an item to edit.
                                        </span>
                                    </div>
                                </div>
                                <div class="mt-3">
                                    <textarea name="value" class="form-control" id="settings-value" rows="10"
                                        disabled></textarea>
                                    <input type="hidden" name="csrf" value="{{csrf}}">
                                </div>
                                <div class="my-3">
                                    <button type="submit" id="settings-btn" class="btn btn-primary" disabled>Save
                                        Settings</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                {{> partials/nav-footer.hbs}}
            </div>
    </main>
    {{> partials/footer.hbs}}
    <script type="text/javascript">
        // when settings-select change value, fetch /admin/settings?name=value to get json response and handle not 200 response
        let selector = document.getElementById('settings-select');
        selector.addEventListener('change', async (e) => {
            const value = e.target.value;
            const settings_value = document.getElementById('settings-value');
            const settings_btn = document.getElementById('settings-btn');
            // if value is empty, set settings-value blank
            if (!value) {
                settings_value.value = 'Select a settings item to edit.';
                settings_value.disabled = true;
                settings_btn.disabled = true;
                return;
            }
            settings_value.value = 'Loading...';
            const response = await fetch(`/admin/settings?name=${value}`);
            if (response.status !== 200) {
                settings_value.value = "Failed to fetch settings";
                settings_value.disabled = true;
                settings_btn.disabled = true;
                return;
            }
            const data = await response.json();
            settings_value.value = data.value;
            settings_value.disabled = false;
            settings_btn.disabled = false;
        });
        // get 'show' query parameter from url
        let show = new URLSearchParams(window.location.search).get('show');
        if (show) {
            selector.value = show;
            selector.dispatchEvent(new Event('change'));
        }
    </script>
</body>

</html>